apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "$rootDir/detekt.gradle"

def apiPropertiesFile = rootProject.file("api.properties")
def apiProperties = new Properties()
if (apiPropertiesFile.exists()) {
    apiProperties.load(new FileInputStream(apiPropertiesFile))
}

android {
    compileSdkVersion Versions.compileSDK

    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        buildConfigField("String", "BASE_URL", apiProperties['BASE_URL'])
        buildConfigField("String", "MARVEL_PRIVATE_KEY", apiProperties['MARVEL_PRIVATE_KEY'])
        buildConfigField("String", "MARVEL_PUBLIC_KEY", apiProperties['MARVEL_PUBLIC_KEY'])
        buildConfigField("String", "TIME_STAMP", apiProperties['TIME_STAMP'])

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.incremental":"true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation project(":domain")
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation KotlinDependencies.kotlinStdLib

    implementation SupportDependencies.appCompat
    implementation SupportDependencies.coreKtx

    implementation LibsDependencies.room
    kapt LibsDependencies.roomCompiler

    api LibsDependencies.retrofit2
    api LibsDependencies.retrofitGson
    api LibsDependencies.httpLoggingInterceptor

    implementation LibsDependencies.dagger
    kapt LibsDependencies.kaptDagger

    testImplementation TestDependencies.junit
    testImplementation TestDependencies.robolectric
    testImplementation TestDependencies.coroutinesTest

    androidTestImplementation TestDependencies.testJunit
    androidTestImplementation TestDependencies.espressoCore
}